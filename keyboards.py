from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder
from database import Database
from constants import ROLES
import logging

logger = logging.getLogger(__name__)


def get_main_menu_keyboard(role: str) -> ReplyKeyboardMarkup:
    """–ü–æ–ª—É—á–∏—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏"""
    builder = ReplyKeyboardBuilder()
    
    if role == ROLES["STUDENT"]:
        builder.row(KeyboardButton(text="üìÖ –ú–æ–∏ —É—Ä–æ–∫–∏"))
        builder.row(KeyboardButton(text="üìö –ú–æ–∏ –î–ó"))
        builder.row(KeyboardButton(text="‚ÑπÔ∏è –ü–æ–º–æ—â—å"))
        
    elif role == ROLES["ADMIN"]:
        builder.row(KeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å"))
        builder.row(KeyboardButton(text="üë• –ú–æ–∏ —É—á–µ–Ω–∏–∫–∏"), KeyboardButton(text="üìö –ó–∞–¥–∞—Ç—å –î–ó"))
        builder.row(KeyboardButton(text="üìä –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º"), KeyboardButton(text="üïê –°–≤–æ–±–æ–¥–Ω—ã–µ –æ–∫–Ω–∞"))
        builder.row(KeyboardButton(text="üìã –ó–∞—è–≤–∫–∏ —É—á–µ–Ω–∏–∫–æ–≤"), KeyboardButton(text="üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"))
        builder.row(KeyboardButton(text="‚ÑπÔ∏è –ü–æ–º–æ—â—å"))
        
    elif role == ROLES["SUPERADMIN"]:
        builder.row(KeyboardButton(text="üëë –°—É–ø–µ—Ä–∞–¥–º–∏–Ω-–º–µ–Ω—é"))
        builder.row(KeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å"))
        builder.row(KeyboardButton(text="üë• –ú–æ–∏ —É—á–µ–Ω–∏–∫–∏"), KeyboardButton(text="üìö –ó–∞–¥–∞—Ç—å –î–ó"))
        builder.row(KeyboardButton(text="üìä –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º"), KeyboardButton(text="üïê –°–≤–æ–±–æ–¥–Ω—ã–µ –æ–∫–Ω–∞"))
        builder.row(KeyboardButton(text="üìã –ó–∞—è–≤–∫–∏ —É—á–µ–Ω–∏–∫–æ–≤"), KeyboardButton(text="üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"))
        builder.row(KeyboardButton(text="‚ÑπÔ∏è –ü–æ–º–æ—â—å"))
    
    builder.row(KeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))
    return builder.as_markup(resize_keyboard=True)


def get_admin_homework_content_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è"""
    builder = InlineKeyboardBuilder()
    
    builder.row(
        InlineKeyboardButton(text="üìù –¢–µ–∫—Å—Ç", callback_data="hw_type_text"),
        InlineKeyboardButton(text="üì∑ –§–æ—Ç–æ", callback_data="hw_type_photo")
    )
    builder.row(
        InlineKeyboardButton(text="üìÅ –§–∞–π–ª", callback_data="hw_type_file"),
        InlineKeyboardButton(text="üé§ –ì–æ–ª–æ—Å", callback_data="hw_type_voice")
    )
    builder.row(
        InlineKeyboardButton(text="üé• –í–∏–¥–µ–æ", callback_data="hw_type_video")
    )
    builder.row(
        InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="hw_type_cancel")
    )
    
    return builder.as_markup()


def get_student_homework_content_keyboard(include_cancel: bool = False) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ —Å–¥–∞—á–∏ –î–ó —Å—Ç—É–¥–µ–Ω—Ç–æ–º"""
    builder = InlineKeyboardBuilder()
    
    builder.row(
        InlineKeyboardButton(text="üìù –¢–µ–∫—Å—Ç", callback_data="submit_text"),
        InlineKeyboardButton(text="üì∑ –§–æ—Ç–æ", callback_data="submit_photo")
    )
    builder.row(
        InlineKeyboardButton(text="üìÅ –§–∞–π–ª", callback_data="submit_file"),
        InlineKeyboardButton(text="üé§ –ì–æ–ª–æ—Å", callback_data="submit_voice")
    )
    builder.row(
        InlineKeyboardButton(text="üé• –í–∏–¥–µ–æ", callback_data="submit_video")
    )
    
    if include_cancel:
        builder.row(
            InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="submit_cancel")
        )
    
    return builder.as_markup()


async def get_tutors_keyboard() -> InlineKeyboardMarkup:
    """–ü–æ–ª—É—á–∏—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å–ø–∏—Å–∫–æ–º —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–æ–≤"""
    try:
        tutors = await Database.get_all_tutors()
        builder = InlineKeyboardBuilder()
        
        if not tutors:
            builder.add(InlineKeyboardButton(
                text="‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–æ–≤",
                callback_data="no_tutors"
            ))
        else:
            for tutor in tutors:
                tutor_id, name, username, subjects, cost, link = tutor
                display_name = f"üë®‚Äçüè´ {name} - {subjects}"
                builder.add(InlineKeyboardButton(
                    text=display_name,
                    callback_data=f"select_tutor_{tutor_id}"
                ))
        
        builder.adjust(1)
        return builder.as_markup()
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–æ–≤: {e}")
        builder = InlineKeyboardBuilder()
        builder.add(InlineKeyboardButton(
            text="‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏",
            callback_data="error"
        ))
        return builder.as_markup()


def get_superadmin_menu_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –º–µ–Ω—é —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–∞"""
    builder = ReplyKeyboardBuilder()
    
    builder.row(KeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–∞"))
    builder.row(KeyboardButton(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–∞"), KeyboardButton(text="üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª—è–º–∏"))
    builder.row(KeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã"), KeyboardButton(text="üìã –°–ø–∏—Å–æ–∫ —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–æ–≤"))
    builder.row(KeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã"), KeyboardButton(text="‚ÑπÔ∏è –ü–æ–º–æ—â—å"))
    builder.row(KeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))
    
    return builder.as_markup(resize_keyboard=True)


def get_cancel_button() -> ReplyKeyboardMarkup:
    """–ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã"""
    builder = ReplyKeyboardBuilder()
    builder.add(KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞"))
    return builder.as_markup(resize_keyboard=True)


def get_confirmation_keyboard(action: str, item_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è"""
    builder = InlineKeyboardBuilder()
    
    builder.row(
        InlineKeyboardButton(text="‚úÖ –î–∞", callback_data=f"{action}_yes_{item_id}"),
        InlineKeyboardButton(text="‚ùå –ù–µ—Ç", callback_data=f"{action}_no_{item_id}")
    )
    
    return builder.as_markup()


def get_role_selection_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏"""
    builder = InlineKeyboardBuilder()
    
    builder.row(
        InlineKeyboardButton(text="üë®‚Äçüéì –°—Ç—É–¥–µ–Ω—Ç", callback_data="role_student"),
        InlineKeyboardButton(text="üë®‚Äçüè´ –†–µ–ø–µ—Ç–∏—Ç–æ—Ä", callback_data="role_admin")
    )
    builder.row(
        InlineKeyboardButton(text="üëë –°—É–ø–µ—Ä–∞–¥–º–∏–Ω", callback_data="role_superadmin"),
        InlineKeyboardButton(text="üìÅ –ê—Ä—Ö–∏–≤", callback_data="role_archived")
    )
    builder.row(
        InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="role_cancel")
    )
    
    return builder.as_markup()


async def get_tutors_for_deletion_keyboard(tutors) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–æ–≤"""
    builder = InlineKeyboardBuilder()
    
    for tutor in tutors:
        tutor_id, name, username, subjects, cost, link = tutor
        builder.add(InlineKeyboardButton(
            text=f"üóëÔ∏è {name}",
            callback_data=f"delete_tutor_{tutor_id}"
        ))
    
    builder.adjust(1)
    return builder.as_markup()
