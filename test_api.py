#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã Door Controller API
"""

import requests
import json
from datetime import datetime, timedelta
import time

BASE_URL = "http://localhost:8000/controller"

def test_api():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π API"""
    
    print("üö™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Door Controller API")
    print("=" * 50)
    
    # 1. –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\n1. –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    user_data = {
        "username": "test_user",
        "access_expires_at": (datetime.now() + timedelta(days=30)).isoformat()
    }
    
    try:
        response = requests.post(f"{BASE_URL}/users", json=user_data)
        if response.status_code == 200:
            user = response.json()
            print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: {user['username']}")
            print(f"   ID: {user['id']}")
            print(f"   –î–æ—Å—Ç—É–ø –¥–æ: {user['access_expires_at']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {response.text}")
            return
    except requests.exceptions.ConnectionError:
        print("‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω.")
        return
    
    # 2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–µ–∫—Ä–µ—Ç–∞
    print("\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ TOTP —Å–µ–∫—Ä–µ—Ç–∞...")
    try:
        response = requests.get(f"{BASE_URL}/users/test_user/secret")
        if response.status_code == 200:
            secret_data = response.json()
            print(f"‚úÖ –°–µ–∫—Ä–µ—Ç –ø–æ–ª—É—á–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {secret_data['username']}")
            print(f"   TOTP —Å–µ–∫—Ä–µ—Ç: {secret_data['totp_secret']}")
            print(f"   QR –∫–æ–¥ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω: {'–î–∞' if secret_data['qr_code_url'] else '–ù–µ—Ç'}")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–µ–∫—Ä–µ—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            totp_secret = secret_data['totp_secret']
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ–∫—Ä–µ—Ç–∞: {response.text}")
            return
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return
    
    # 3. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ TOTP –∫–æ–¥–∞
    print("\n3. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ TOTP –∫–æ–¥–∞...")
    try:
        import pyotp
        totp = pyotp.TOTP(totp_secret)
        current_code = totp.now()
        print(f"‚úÖ –¢–µ–∫—É—â–∏–π TOTP –∫–æ–¥: {current_code}")
    except ImportError:
        print("‚ùå –ú–æ–¥—É–ª—å pyotp –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install pyotp")
        return
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ TOTP: {e}")
        return
    
    # 4. –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è TOTP
    print("\n4. –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è TOTP –∫–æ–¥–∞...")
    verify_data = {
        "username": "test_user",
        "totp_code": current_code
    }
    
    try:
        response = requests.post(f"{BASE_URL}/verify", json=verify_data)
        if response.status_code == 200:
            verify_result = response.json()
            print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏:")
            print(f"   –£—Å–ø–µ—Ö: {verify_result['success']}")
            print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ: {verify_result['message']}")
            print(f"   –î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω: {verify_result['access_granted']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # 5. –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    print("\n5. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    try:
        response = requests.get(f"{BASE_URL}/users")
        if response.status_code == 200:
            users = response.json()
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users)}")
            for user in users:
                print(f"   - {user['username']} (ID: {user['id']}, –°–µ–∫—Ä–µ—Ç: {'–ï—Å—Ç—å' if user['has_secret'] else '–ù–µ—Ç'})")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\n" + "=" * 50)
    print("üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    test_api()
